<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:renderers="renderers.*">
	
	<fx:Metadata>
		[Event(name="placeSelected", type="flash.events.Event")]
		[Event(name="newPlaceRequested", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.terrenceryan.finicky.vo.Place;
			
			import mx.collections.ArrayCollection;
			
			private const BUTTON_PADDING:int = 140;
			
			private var _active:Boolean = true;
			public var place:Place;
			[Bindable]
			public var places:ArrayCollection;
			
			
			[Bindable]
			[Embed(source="/assets/icons/newPlaceUp.png")]
			private var newPlaceUp:Class;
			
			[Bindable]
			[Embed(source="/assets/icons/newPlaceDown.png")]
			private var newPlaceDown:Class;
			
			[Bindable]
			[Embed(source="/assets/icons/pickPlaceUp.png")]
			private var pickPlaceUp:Class;
			
			[Bindable]
			[Embed(source="/assets/icons/pickPlaceDown.png")]
			private var pickPlaceDown:Class;
			
			public function get active():Boolean
			{
				return _active;
			}

			public function set active(value:Boolean):void
			{
				_active = value;
				visible = value;
			}

			protected function closeButton_clickHandler(event:MouseEvent):void
			{
				active = false;
				visible = false;
				
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				
				iconPick.source = pickPlaceUp;
				iconNew.source = newPlaceUp;
				
				if (event.currentTarget.name == "iconPick"){
					iconPick.source = pickPlaceDown;
					placeList.visible = true;
				}
				
				if (event.currentTarget.name == "iconNew"){
					iconNew.source = newPlaceDown;
					placeList.visible = false;
					dispatchEvent(new Event("newPlaceRequested") );
				}
			}
			
			
			protected function placeList_clickHandler(event:MouseEvent):void
			{
				if (placeList.selectedIndex > -1){
					place = placeList.selectedItem;
					dispatchEvent(new Event("placeSelected"));
					active = false;
					
				}
				
			}
			
		]]>
	</fx:Script>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		#textCurrent,#textNew,#textExisting{
			fontFamily:"Liberator";
			fontSize:40;
			fontWeight:"normal";
			textAlign: center;
			
		}
	</fx:Style>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:Rect width="100%" height="100%" alpha=".8">
		<s:fill>
			<s:SolidColor color="0x000000" />
		</s:fill>
	</s:Rect>
	
	<s:Group id="mainInterface" left="0" right="0" horizontalCenter="0" verticalCenter="0">
		<s:Image id="bg" width="95%" maxWidth="554" maxHeight="807"  x="10" source="@Embed('/assets/bg/bg_modal_long.png')" verticalCenter="0"/>
	
		<s:Button id="closeButton" right="0" y="{bg.y+ 30}" click="closeButton_clickHandler(event)" skinClass="skins.AlertCloseButtonSkin" /> 
		

		<s:Image id="iconNew" name="iconNew"  source="{newPlaceUp}" horizontalCenter="0" top="{120}"  click="clickHandler(event)"  />
		<s:Image id="iconPick" depth="2" name="iconPick" source="{pickPlaceUp}" horizontalCenter="0" top="{iconNew.top + BUTTON_PADDING}"  click="clickHandler(event)"  />
			
		<s:List id="placeList" depth="1" visible="false" top="{iconPick.top + BUTTON_PADDING}" horizontalCenter="0" width="90%" height="330" 
				dataProvider="{places}" contentBackgroundAlpha="0" click="placeList_clickHandler(event)"  >
			<s:itemRenderer>
				<fx:Component>
					<renderers:ItemListRenderer labelField="name" messageFunction="getCityandState" messageStyleName="locationName" 
												decorator="@Embed('/assets/icons/itemListButtonUp.png')" styleName="itemName">
						<fx:Script>
							<![CDATA[
								protected function getCityandState(obj:Object):String{
									return obj.toCityStateString();
								}
								
							]]>
						</fx:Script>
					</renderers:ItemListRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>	
			
		
		
	</s:Group>
	
	
</s:Group>
