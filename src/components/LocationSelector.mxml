<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="init(event)" width="100%" height="100%" 
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:renderers="renderers.*">
	
	<fx:Metadata>
		[Event(name="newItemRequested", type="flash.events.Event")]
		[Event(name="activeOn", type="flash.events.Event")]
		[Event(name="activeOff", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.terrenceryan.finicky.vo.Place;
			
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			
			[Bindable]
			public var places:ArrayCollection;
			private var _place:Place;
			
			private var _active:Boolean = false;
			
			
			public function get active():Boolean
			{
				return _active;
			}

			public function set active(value:Boolean):void
			{
				_active = value;
				placeList.visible = value;
				modalBG.visible = value;
				listScroller.visible = value;
				cancelButton.visible = value;
				
				if (value){
					depth = 40;
					dispatchEvent( new Event("activeOn") );
				}
				else{
					depth = 0;
					dispatchEvent( new Event("activeOff") );
				}
				
			}

			[Bindable]
			public function get place():Place
			{
				return _place;
			}

			public function set place(value:Place):void
			{
				_place = value;
				//locationButton.label = value.address;
			}

			protected function init(event:FlexEvent):void
			{
				
				if (listScroller.height > 807){
					cancelButton.y = 737;
				}
				else{
					cancelButton.bottom = 40;
				}
				
				
				placeList.dataProvider = places;
				placeList.addEventListener(FlexEvent.UPDATE_COMPLETE, addNewItemOptionToList);
				
			}
			
			protected function locationButton_clickHandler(event:MouseEvent):void
			{
				active = true;
				
			}
			
			protected function placeList_clickHandler(event:MouseEvent):void
			{
				if (placeList.selectedIndex > -1){
					if (placeList.selectedItem.address == "[Add location by hand]"){
						dispatchEvent( new Event("newItemRequested") );
					}
					else{
						place = placeList.selectedItem;
					}
					active = false;
				}
				
			}
			
			
			
			protected function addNewItemOptionToList(event:FlexEvent):void
			{
				if (places){
					if (places.getItemAt(places.length-1).address != "[Add location by hand]"){
						var place:Place = new Place();
						place.address = "[Add location by hand]";
						places.addItem(place);
					}
				}
			}
			
			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				active = false;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	
	<s:Rect id="modalBG" width="100%" height="100%" alpha=".8" visible="false">
		<s:fill>
			<s:SolidColor color="0x000000" />
		</s:fill>
	</s:Rect>
	
	<s:Scroller id="listScroller" left="30" right="30" top="10" bottom="30" verticalScrollPolicy="off" horizontalScrollPolicy="off" visible="false">
		<s:Group clipAndEnableScrolling="true" >
			<s:Image id="listBG" source="@Embed('/assets/bg/bg_modal_long.png')" />
		</s:Group>
	</s:Scroller>
	
	<s:List id="placeList" left="30" right="30" top="10" bottom="80" dataProvider="{places}" 
			click="placeList_clickHandler(event)"
			visible="false" contentBackgroundAlpha="0">
		<s:itemRenderer>
			<fx:Component>
				<renderers:ItemListSmallRenderer decorator="@Embed('/assets/icons/itemListButtonSmallUp.png') "  
											styleName="locationName" 
											messageStyleName="locationName" 
											labelFunction="getAddress" 
											messageFunction="getRest"
									 		cacheAsBitmap="true">
					
				
					<fx:Script>
						<![CDATA[
							import com.terrenceryan.finicky.vo.Place;
							protected function getRest(obj:Object):String{
								var result:String = obj.getRendererLabel();
								return result;
							}
							
							protected function getAddress(obj:Object):String{
								return obj.address;
							}
						]]>
					</fx:Script>
					
				</renderers:ItemListSmallRenderer>
			</fx:Component>
			
		</s:itemRenderer>
	</s:List>
	<s:Button id="cancelButton" label="CANCEL"  click="cancelButton_clickHandler(event)" horizontalCenter="0" visible="false" skinClass="skins.DetailsViewMenuItemSkin" /> 
</s:Group>
