/* CSS file */
@namespace s "library://ns.adobe.com/flex/spark";
@namespace components "components.*";
@namespace views "views.*";
@namespace skins "skins.*";


s|View{
	backgroundAlpha: 0;
}

s|IconItemRenderer{
	backgroundAlpha: 0;
}

.itemName{
	fontFamily: "Lions Den";
	fontSize: 30;
	paddingLeft:58;
	paddingTop: 43;
	
}

#itemLabel {
	fontFamily: "Lions Den";
	fontSize: 40;
	
	
}

.locationName{
	fontFamily: "Trade Gothic LT Std";
	fontWeight: bold;
	fontSize: 18;
	
}

#storeName{
	fontFamily: "Trade Gothic LT Std Cn - bold";
	fontSize: 22;
	color: #000000;
	
}

#storeAddress, #storeCityStateZip, #storeLat, #storeLon{
	fontFamily: "Trade Gothic LT Std";
	fontSize: 20;
	color: #000000;
}

#matchNotes{
	fontFamily: "Lions Den";
	fontSize: 35;
	paddingLeft:50;
	paddingRight:20;
	color: #383539;
}



#titleLabel{
	fontFamily:"Liberator";
	fontSize:40;
	fontWeight:"normal";
	textAlign: center;
	
}

.userInputtedInfo{
	fontFamily: "Lions Den";
	fontSize: 40;
}

.appProvidedText{
	fontFamily: "Trade Gothic LT Std";
	fontSize: 40;
}

#noItemsLabel{
	fontFamily: "Trade Gothic LT Std";
	fontSize: 40;
}

#titleLabel{
	fontFamily:"Liberator";
	fontSize:40;
	fontWeight:"normal";
	textAlign: center;
	
}

/**********************************************
	View Specific style
***********************************************/
views|About #labelDev, views|About #labelDes, views|About #labelThanks {
	textAlign: center;
	fontFamily: "Trade Gothic LT Std Cn";
	fontSize: 22;
	color: #000000;
	fontWeight: bold;
}

views|About #textDev, views|About #textDes, views|About #textThanks{
	fontFamily: "Lions Den";
	fontSize: 35;
	color: #383539;
	textAlign: center;
}

views|AddressEdit #nameText, views|AddressEdit #addressText, views|AddressEdit #cityText, views|AddressEdit #stateText,
views|AddressEdit  #mailingcodeText, views|AddressEdit #countryText{
	focusThickness: 0;
	textAlign: left; 
	
}

views|AddressEdit #nameLabel, views|AddressEdit #addressLabel, views|AddressEdit #cityLabel, views|AddressEdit #stateLabel, views|AddressEdit #mailingcodeLabel, views|AddressEdit #countryLabel{
	fontFamily: "Trade Gothic LT Std";
	
}

views|Edit #editItemLabel, views|Edit #editLocationLabel{
	fontFamily: "Liberator";
	fontSize: 40;
	color: #21211A;
}

views|PlaceEdit #nameText, views|PlaceEdit #addressText, views|PlaceEdit #cityText, views|PlaceEdit #stateText,
views|PlaceEdit #mailingcodeText, views|PlaceEdit #countryText{
	focusThickness: 0;
	textAlign: left; 
	
}

views|PlaceEdit #nameLabel, views|PlaceEdit #addressLabel, views|PlaceEdit #cityLabel, views|PlaceEdit #stateLabel, 
views|PlaceEdit #mailingcodeLabel, views|PlaceEdit #countryLabel{
	fontFamily: "Trade Gothic LT Std";
	
}



/**********************************************
	Component Specific style
***********************************************/

components|AcceptPopUp #okLabel, components|AcceptPopUp #cancelLabel{
	fontFamily:"Liberator";
	fontSize:40;
	fontWeight:"normal";
	textAlign: center;
}


components|LocationModal #textCurrent, components|LocationModal #textNew, components|LocationModal #textExisting{
	fontFamily:"Liberator";
	fontSize:40;
	fontWeight:"normal";
	textAlign: center;
	
}

components|FilterModal #modalPlaceLabel, components|FilterModal #modalItemLabel, #demoModeLabel, #usLabel, #metricLabel{
	fontFamily: "Liberator";
	fontSize: 54;
	color: #383539;
}

components|Notice #messageText{
	fontFamily:"Trade Gothic LT Std";
	fontSize: 20;
	fontWeight: normal;
}

components|StartingNotice #startText{
	fontFamily: "Trade Gothic LT Std Cn";
	fontSize:54;
	textAlign: left;
	
}

components|SuggestionTextBox #suggestionList, components|SuggestionTextBox #ti {
	fontFamily: "Lions Den";
	fontSize: 36;
}

components|FilterModal #modalPlaceLabel, components|FilterModal #modalItemLabel{
	fontFamily: "Liberator";
	fontSize: 54;
	color: #383539;
}






/**********************************************
	Skin Specific style
***********************************************/
skins|AlertSkin #messageText{
	fontFamily:"Trade Gothic LT Std";
	fontSize: 30;
	fontWeight: normal;
}
/**********************************************
	SKINS
***********************************************/

#filterBtn{
	skinClass: ClassReference("skins.FilterButtonSkin")
}

#noItemsButton, #setLocationButton{
	skinClass: ClassReference("skins.EditLocationButtonSkin")
}

s|ViewNavigatorApplication{
	skinClass: ClassReference("skins.AppSkin");
}
s|ViewMenu{
	skinClass: ClassReference("skins.DetailViewMenuSkin");
}
s|ViewMenuItem{
	skinClass: ClassReference("skins.DetailsViewMenuItemSkin");
}
s|TextInput{
	skinClass: ClassReference("skins.FormTexInputSkin");
}

views|MapView #filterString{
	skinClass: ClassReference("skins.SuggestionTextBoxTextInputSkin")
}
components|SuggestionTextBox s|TextInput{
	skinClass: ClassReference("skins.SuggestionTextBoxTextInputSkin")
}

#persistentTabMenu s|Button{
	skinClass: ClassReference("skins.DetailsViewMenuItemSkin");
}
#directionsBtn{
	skinClass: ClassReference("skins.DirectionsButtonSkin");
}
#locationButton{
	skinClass: ClassReference("skins.EditLocationButtonSkin");
}
#emailButton{
	skinClass: ClassReference("skins.FormButtonSkin");	
}	
components|AcceptPopUp{
	skinClass: ClassReference("skins.AlertSkin");
}
components|AcceptPopUp #okButton{
	skinClass: ClassReference("skins.AlertOKButtonSkin");
}
components|AcceptPopUp #cancelButton{
	skinClass: ClassReference("skins.AlertCloseButtonSkin");
}
components|Alert {
	skinClass: ClassReference("skins.AlertSkin");
}
components|Alert #okButton{
	skinClass: ClassReference("skins.OkButtonSkin");
}
components|ChangeLocationButton #icon{
	skinClass: ClassReference("skins.ChangeLocationButtonSkin");
}
components|ItemNavigator {
	skinClass: ClassReference("skins.ItemNavigatorSkin");
}
components|ItemNavigator s|Button{
	skinClass: ClassReference("skins.BannerButtonSkin");
}
components|Location{
	skinClass: ClassReference("skins.FilterButtonSkin");
}
components|NotePad #contentArea{
	skinClass: ClassReference("skins.NoteSkin");
}
components|PhotoButton{
	skinClass: ClassReference("skins.EditButtonSkin");
}
components|StartingNotice #closeButton{
	skinClass: ClassReference("skins.OkButtonSkin");
}
components|WriteButton {
	skinClass: ClassReference("skins.EditButtonSkin");
}

components|Location {
	skinClass: ClassReference("skins.LocationSkin");
}

components|LocationSelector #cancelButton{
	skinClass: ClassReference("skins.DetailsViewMenuItemSkin");
}



/**********************************************
	Device Specific Skinning
***********************************************/

@media (os-platform: "AND"){
}


@media(os-platform:"IOS")
{
	s|ActionBar
	{
		defaultButtonAppearance:beveled;
		titleAlign:"center";
		chromeColor:"0x0E96A9";
		accentColor:"0x000000";
	}
	
	s|ActionBar #titleDisplay
	{
		fontFamily: "Spoleto";
		fontWeight: normal;
		fontSize: 50px;
		left: 0;
		right: 0;
		dropShadowVisible: true;
		shadowAlpha: .9;
		shadowColor: "0x000000";
		shadowAngle: 120;
		shadowDistance: 1;
	}
	
	s|ActionBar s|Button{
		fontFamily: "Lions Den";
		fontWeight: normal;
	}
	
	s|TabbedViewNavigator #tabBar
	{
		chromeColor:"0x0E96A9";
		accentColor:"0x000000";
		color: #FFFFFF;
		fontSize: 40;
		fontWeight: normal;
		fontFamily: "Lions Den";
	}
	
	#deleteBtnIOS{
		left: 5;
		right: 5;
		chromeColor: #FF0000;
		color: #FFFFFF;
		fontFamily: "Lions Den";
		fontWeight: normal;
	}

	s|ActionBar #settingsBtnAB{
		skinClass: ClassReference("spark.skins.mobile.BeveledActionButtonSkin");
	}
	
}
