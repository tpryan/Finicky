<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:esri="http://www.esri.com/2008/ags" creationComplete="init(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" title="Map" actionBarVisible="false" >
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.geometry.WebMercatorMapPoint;
			import com.esri.ags.symbols.CompositeSymbol;
			import com.esri.ags.symbols.PictureMarkerSymbol;
			import com.esri.ags.symbols.SimpleMarkerSymbol;
			import com.esri.ags.symbols.TextSymbol;
			import com.terrenceryan.finicky.DataSingleton;
			import com.terrenceryan.finicky.vo.Item;
			import com.terrenceryan.finicky.vo.Place;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			[Bindable]
			protected var play:Number  = .01;
			protected var dataToPush:DataSingleton;
			
			[Bindable]
			[Embed(source="/assets/icons/mapMarker.png")]
			private var mapMarker:Class;
			
			private var markers:ArrayCollection;
			
			
			protected function init(event:FlexEvent):void
			{
				dataToPush = data as DataSingleton;
				dataToPush.lastView = "MapView";
				
				markers = data.itemAtPlaceList;
				
				placeMarkers();
				
				
				
		
			}
			
			protected function placeMarkers():void{
				//Format for place names
				var placeTextFormat:TextFormat = new TextFormat();
				placeTextFormat.font = "Trade Gothic LT Std Cn";
				placeTextFormat.bold = true;
				placeTextFormat.size = 16;
				
				//Format for place names
				var itemTextFormat:TextFormat = new TextFormat();
				itemTextFormat.font = "Lions Den";
				itemTextFormat.bold = false;
				itemTextFormat.size = 20;
				
				//Pictures for place markers
				var placeMaker:PictureMarkerSymbol = new PictureMarkerSymbol(mapMarker,167,58);
				placeMaker.xoffset = 85;
				placeMaker.yoffset = 28;
				
				var homeMapPoint:WebMercatorMapPoint = new WebMercatorMapPoint(data.home.lon,data.home.lat);
				var homeSymbol:SimpleMarkerSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_DIAMOND, 22, 0xFF0000);
				
				var textMarker:TextSymbol = new TextSymbol("You");
				textMarker.textFormat = placeTextFormat;
				
				var homeCompositeSymbol:CompositeSymbol = new CompositeSymbol([homeSymbol, textMarker]);
				
				var homeGraphic:Graphic = new Graphic(homeMapPoint,homeCompositeSymbol);
				
				myGraphicsLayer.add(homeGraphic);
				
				for (var i:int = 0; i < markers.length; i++){
					var place:Place = markers.getItemAt(i).place;
					var item:Item = markers.getItemAt(i).item;
					
					var placeMapPoint:WebMercatorMapPoint = new WebMercatorMapPoint(place.lon,place.lat);
					
					
					var itemTextMarker:TextSymbol = new TextSymbol(fitString(item.name));
					itemTextMarker.xoffset = placeMaker.xoffset;
					itemTextMarker.yoffset = placeMaker.yoffset + 10;
					itemTextMarker.textFormat = itemTextFormat;
					
					var placeCompositeSymbol:CompositeSymbol = new CompositeSymbol([placeMaker,itemTextMarker]);
					var placeGraphic:Graphic = new Graphic(placeMapPoint, placeCompositeSymbol);
					
					
					placeGraphic.name = i.toString();
					placeGraphic.addEventListener(MouseEvent.CLICK, function(event:MouseEvent):void {dataToPush.selectedIndex = parseInt(event.currentTarget.name); navigator.pushView(Detail, dataToPush);});
					
					myGraphicsLayer.add(placeGraphic);
					
				}
			}
			
			
			protected function fitString(str:String):String
			{
				var boxThreshold:int = 17;
				var result:String = str;
				
				if (str.length > boxThreshold){
					result = str.slice(0,boxThreshold -3);
					result = result.concat("...");
				}
					
					
				return result;	
			}
			
			protected function listButton_clickHandler(event:MouseEvent):void
			{
				navigator.popView();
				
			}
			
			protected function addButton_clickHandler(event:MouseEvent):void
			{
				dataToPush.selectedIndex = -1;
				navigator.pushView(Edit, dataToPush);
				
			}
			
			
			protected function settingsButton_clickHandler(event:MouseEvent):void
			{
				navigator.pushView(Settings, dataToPush);
				
			}
			
			protected function filterString_changeHandler(event:TextOperationEvent):void
			{
				markers.filterFunction = filterFunction;
				markers.refresh();
				myGraphicsLayer.clear();
				placeMarkers();
				
			}
			
			private function filterFunction(itemAtPlace:Object):Boolean {
				var searchString:String = filterString.text.toLowerCase();
				var itemName:String = (itemAtPlace.item.name as String).toLowerCase();
				return itemName.indexOf(searchString) > -1;
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<esri:SpatialReference id="wgs" wkid="4326"/>

	</fx:Declarations>
	
	
	<esri:Map id="mainMap" wrapAround180="true" top="0" left="0" right="0" bottom="">
		<esri:extent>
			<esri:WebMercatorExtent id="map" minlon="{data.home.lon-play}" minlat="{data.home.lat-play}" maxlon="{data.home.lon+play}" maxlat="{data.home.lat+play}"/>
		</esri:extent>
		<esri:ArcGISTiledMapServiceLayer url="http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"/>
		<esri:GraphicsLayer id="myGraphicsLayer" />
	</esri:Map>
	
	<s:TextInput id="filterString" top="5" left="45" right="5" textAlign="center" change="filterString_changeHandler(event)" />
	
	<s:viewMenuItems>
		<s:ViewMenuItem id="addButton" label="ADD" click="addButton_clickHandler(event)"  />
		<s:ViewMenuItem id="listButton" label="LIST" click="listButton_clickHandler(event)" />
		<s:ViewMenuItem id="settingsButton" label="SETTINGS" click="settingsButton_clickHandler(event)" />
		<s:ViewMenuItem id="holder" label=" "  />
	</s:viewMenuItems>
	
</s:View>
