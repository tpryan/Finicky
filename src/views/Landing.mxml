<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" keyDown="keyPress(event)" creationComplete="init(event)"   
		xmlns:s="library://ns.adobe.com/flex/spark" title="" actionBarVisible="false" 
		xmlns:components="components.*" xmlns:renderers="renderers.*">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			protected var currentCity:int = 0;
			protected var dataToPush:Object;
			public var i:int = 0;
			
			protected function location1_locationChangedHandler(event:Event):void
			{
				currentCity = currentCity + 1;
				
				if (currentCity >= cities.length){
					currentCity = 0;
				}
				
				locationInterface.location = cities.getItemAt(currentCity).name;
			}
			
			protected function itemList_clickHandler(event:MouseEvent):void
			{
				dataToPush.selectedIndex = itemList.selectedIndex;
				dataToPush.items = items;
				navigator.pushView(Detail, dataToPush);
				
			}
			
			protected function keyPress(event:KeyboardEvent):void
			{
				trace(event.keyCode);
				
				
				if (event.keyCode == Keyboard.BACK){
					
					if (filterModal.active){
						event.preventDefault();
						filterModal.active = false;
						filterModal.visible = false;
					}
				}
				
				
				if (event.keyCode == Keyboard.MENU){
					
					if (!filterModal.active){
						filterModal.active = true;
						filterModal.visible = true;
					}
					else{
						filterModal.active = false;
						filterModal.visible = false;
					}
				}
				
			}
			
			protected function locationInterface_filterClickedHandler(event:Event):void
			{
				filterModal.active = true;
				filterModal.visible = true;
				
			}
			
			protected function init(event:FlexEvent):void
			{
				dataToPush = data;
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="cities">
			<fx:Object name="Philadelphia, PA" />
			<fx:Object name="New York, NY" />
			<fx:Object name="Los Angeles, CA" />
			<fx:Object name="San Francisco, CA	" />
		</s:ArrayCollection>
		
		<s:ArrayCollection id="items">
			<fx:Object name="Cloves" location="Avril 50" />
			<fx:Object name="Coke Zero" location="7/Eleven" />
			<fx:Object name="Indian Buffet" location="Sitar India" />
			<fx:Object name="Sushi" location="Aoi" />
			<fx:Object name="Ben &amp; Jerry's Mudslide" location="Whole Foods" />
			<fx:Object name="Yuengling Lager" location="McCrossens" />
			<fx:Object name="Stoudt's Double Bock" location="Philly Pub and Grub" />
			<fx:Object name="Mexican Coke" location="Philly Flavors" />
			<fx:Object name="Soft Serve" location="Philly Flavors" />
			<fx:Object name="BLT's with Avacodo" location="RyBread" />
		</s:ArrayCollection>
		
	</fx:Declarations>
	
	<s:List id="itemList" left="0" right="0" top="310" bottom="0" dataProvider="{items}" contentBackgroundAlpha="0"
			click="itemList_clickHandler(event)">
		<s:itemRenderer>
			<fx:Component>
				<renderers:NoBackGround creationComplete="init()" height="173" 
										styleName="itemName" messageStyleName="locationName" labelField="name"
										decorator="@Embed('/assets/icons/itemListButtonUp.png') "
										messageFunction="upperLocation" click="clickHandler(event)" 
										>
					
					<fx:Script>
						<![CDATA[
							import mx.states.AddChild;
							
							import spark.components.Image;
							
							[Embed(source='/assets/icons/itemListButtonDown.png')]
							private static var itemDown:Class;
							
							[Embed(source='/assets/icons/itemListButtonUp.png')]
							private static var itemUp:Class;
							
							[Embed(source='/assets/bg/rule.png')]
							private static var rule:Class;
							
							[Embed(source='/assets/bg/rule2.png')]
							private static var rule2:Class;
							
							[Embed(source='/assets/bg/rule3.png')]
							private static var rule3:Class;
							
							
							public var selectedDecorator:Image = new Image();
							
							protected function upperLocation(obj:Object):String{
								return obj.location.toUpperCase()
								
							}
							
							
							
							protected function init():void
							{
								
								var image:Image = new Image();
								
								image.height = 2;
								image.width = width;
								image.y = 0;
								image.horizontalCenter = 0;
								
								
								if (outerDocument.i % 3 == 0){
									image.source = rule3;
								}else if (outerDocument.i % 2 == 0){
									image.source = rule2;
								}else{
									image.source = rule;
								}
								
								outerDocument.i++;
								trace(outerDocument.i + ' ' + outerDocument.i % 2);
								
								this.addChild(image)
								
								
							}
							
							
							
							protected function clickHandler(event:MouseEvent):void
							{
								decoratorDisplay.source = itemDown;
								bg.z = 0;
								bgVisible = true;
								
								selectedDecorator.source = itemDown;
								selectedDecorator.width = decoratorDisplay.width;
								selectedDecorator.height = decoratorDisplay.height;
								selectedDecorator.y = decoratorDisplay.y;
								selectedDecorator.x = decoratorDisplay.x;
								addChildAt(selectedDecorator, 1);
								
							}
							
						]]>
					</fx:Script>
					
				</renderers:NoBackGround>
			</fx:Component>
			
		</s:itemRenderer>
	</s:List>
	
	<components:Location id="locationInterface" filterClicked="locationInterface_filterClickedHandler(event)" location="{cities.getItemAt(currentCity).name}" locationChanged="location1_locationChangedHandler(event)" />

	<components:FilterModal id="filterModal" visible="false" />	
	
</s:View>
