<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" keyDown="keyPress(event)" creationComplete="init(event)"   
		xmlns:s="library://ns.adobe.com/flex/spark" title="" actionBarVisible="false" 
		xmlns:components="components.*" xmlns:renderers="renderers.*">
	
	<fx:Script>
		<![CDATA[
			import com.terrenceryan.finicky.db.DBManager;
			
			import mx.events.FlexEvent;
			protected var currentCity:int = 0;
			protected var dataToPush:Object;
			public var i:int = 0;
			protected var dbManager:DBManager;
			
			[Bindable]
			protected var itemAtPlaceList:ArrayCollection;
			
			
			protected function init(event:FlexEvent):void
			{
				dataToPush = data;
				dbManager = data.dbManager;
				itemAtPlaceList = dbManager.itemAtPlaceDAO.list("distance",data.home);
				
				
				
			}
			
			protected function location1_locationChangedHandler(event:Event):void
			{
				currentCity = currentCity + 1;
				
				if (currentCity >= cities.length){
					currentCity = 0;
				}
				
				locationInterface.location = cities.getItemAt(currentCity).name;
			}
			
			protected function itemList_clickHandler(event:MouseEvent):void
			{
				dataToPush.selectedIndex = itemList.selectedIndex;
				dataToPush.itemAtPlaceList = itemAtPlaceList;
				navigator.pushView(Detail, dataToPush);
				
			}
			
			protected function keyPress(event:KeyboardEvent):void
			{
				trace(event.keyCode);
				
				
				if (event.keyCode == Keyboard.BACK){
					
					event.preventDefault();
					
					if (filterModal.active){
						filterModal.active = false;
						filterModal.visible = false;
					} 
				}
				
				
				
			}
			
			protected function locationInterface_filterClickedHandler(event:Event):void
			{
				filterModal.active = true;
				filterModal.visible = true;
				
			}
			
			
			
			protected function addButton_clickHandler(event:MouseEvent):void
			{
				dataToPush.selectedIndex = -1;
				navigator.pushView(Edit, dataToPush);
				
			}
			
			protected function filterModal_changedHandler(event:Event):void
			{
				if (filterModal.filterType == "place"){
					itemAtPlaceList = dbManager.itemAtPlaceDAO.list("distance",data.home);
				}
				else{
					itemAtPlaceList = dbManager.itemAtPlaceDAO.list("item.name");
				}
				
			}
			
			protected function mapButton_clickHandler(event:MouseEvent):void
			{
				
				dataToPush.itemAtPlaceList = itemAtPlaceList;
				navigator.pushView(MapView, dataToPush);
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="cities">
			<fx:Object name="Philadelphia, PA" />
			<fx:Object name="New York, NY" />
			<fx:Object name="Los Angeles, CA" />
			<fx:Object name="San Francisco, CA	" />
		</s:ArrayCollection>
		
		<s:ArrayCollection id="items">
			<fx:Object name="Cloves" location="Avril 50" />
			<fx:Object name="Coke Zero" location="7/Eleven" />
			<fx:Object name="Indian Buffet" location="Sitar India" />
			<fx:Object name="Sushi" location="Aoi" />
			<fx:Object name="Ben &amp; Jerry's Mudslide" location="Whole Foods" />
			<fx:Object name="Yuengling Lager" location="McCrossens" />
			<fx:Object name="Stoudt's Double Bock" location="Philly Pub and Grub" />
			<fx:Object name="Mexican Coke" location="Philly Flavors" />
			<fx:Object name="Soft Serve" location="Philly Flavors" />
			<fx:Object name="BLT's with Avacodo" location="RyBread" />
		</s:ArrayCollection>
		
	</fx:Declarations>
	
	<s:List id="itemList" left="0" right="0" top="310" bottom="0" dataProvider="{itemAtPlaceList}" contentBackgroundAlpha="0" click="itemList_clickHandler(event)">
		<s:itemRenderer>
			<fx:Component>
				<renderers:ItemListRenderer  styleName="itemName" messageStyleName="locationName" labelFunction="getItemName"
										decorator="@Embed('/assets/icons/itemListButtonUp.png') "
										messageFunction="upperLocation" 
										>
					<fx:Script>
						<![CDATA[
							import com.terrenceryan.finicky.vo.Place;
							protected function upperLocation(obj:Object):String{
								return obj.place.name.toUpperCase();
								
							}
							
							protected function getItemName(obj:Object):String{
								
								
								
								return obj.item.name;
								
							}
						]]>
					</fx:Script>
					
				</renderers:ItemListRenderer>
			</fx:Component>
			
		</s:itemRenderer>
	</s:List>

	<components:Location id="locationInterface" filterClicked="locationInterface_filterClickedHandler(event)" location="{cities.getItemAt(currentCity).name}" locationChanged="location1_locationChangedHandler(event)" />

	<components:FilterModal id="filterModal" visible="false" width="100%" changed="filterModal_changedHandler(event)" />
	
	<s:viewMenuItems>
		<s:ViewMenuItem id="addButton" label="ADD" skinClass="skins.DetailsViewMenuItemSkin" click="addButton_clickHandler(event)"  />
		<s:ViewMenuItem id="mapButton" label="MAP" skinClass="skins.DetailsViewMenuItemSkin" click="mapButton_clickHandler(event)" />
	
	</s:viewMenuItems>
	
</s:View>
