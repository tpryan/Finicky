<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" dataChange="dataChangeHandler(event)" creationComplete="init(event)" 
		actionBarVisible="{data.softControls}" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Edit Current Location" xmlns:components="components.*">
	<fx:Script>
		<![CDATA[
			import com.terrenceryan.finicky.DataSingleton;
			import com.terrenceryan.finicky.db.DBManager;
			import com.terrenceryan.finicky.geo.GeoResultEvent;
			import com.terrenceryan.finicky.geo.GoogleGeoCode;
			import com.terrenceryan.finicky.vo.Place;
			
			import mx.events.FlexEvent;
			
			import spark.components.Label;
			
			[Bindable]
			public var place:Place = new Place();
			
			public var dataToPush:DataSingleton;
			public var dbManager:DBManager;
			
			protected function dataChangeHandler(event:FlexEvent):void
			{
				dataToPush = data as DataSingleton;
				place = dataToPush.place as Place;
				dbManager = dataToPush.dbManager;
			}
			
			protected function saveButton_clickHandler(event:Event):void
			{
				
				dataToPush.home = place;
				dataToPush.place = null;
				dataToPush.displayNotice = true;
				var geoService:GoogleGeoCode = new GoogleGeoCode();
				geoService.addEventListener("geoCodeResult", processGeoCode);
				geoService.fromAddressToLatLon(place);
				
				navigator.popView();
				
			}
			
			protected function cancelButton_clickHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				navigator.popView();
			}
			
			protected function processGeoCode(event:GeoResultEvent):void
			{
				place = place.clone();
				place.lat = event.result.lat;
				place.lon = event.result.lon;
				dataToPush.home = place;
				
			}
			
			protected function init(event:FlexEvent):void
			{
				if (!dataToPush.softControls){
					var titleLabel:Label = new Label();
					titleLabel.styleName = "titleLabel";
					titleLabel.percentWidth = 100;
					titleLabel.text = this.title;
					titleLabel.top = 5;
					this.addElementAt(titleLabel, 0);
					
				}
				
			}
			
			public function getTopPadding():int{
				if (data.softControls){
					return 0;
				}
				else{
					return 55;
				}
			}
			
		]]>
	</fx:Script>
	
	
	
	
	<s:Scroller width="100%" height="100%" left="5" right="5" top="{getTopPadding()}" bottom="5">
		<s:VGroup clipAndEnableScrolling="true" id="editGroup">
				<s:TextInput id="addressText" width="100%"  text="@{place.address}" prompt="[Address]" />
				<s:TextInput id="cityText" width="100%"  text="@{place.city}" prompt="[City]"  />
				<s:TextInput id="stateText" width="100%"  text="@{place.state}" prompt="[State]"  />
				<s:TextInput id="mailingcodeText" width="100%"  text="@{place.mailingCode}" prompt="[Mailing Code]"  />
				<s:TextInput id="countryText" width="100%"  text="@{place.country}" prompt="[Country]"  />
				<s:TextInput id="latText" width="100%" enabled="false"  text="{place.lat}" prompt="[Latitude]"  />
				<s:TextInput id="lonText" width="100%" enabled="false"  text="{place.lon}" prompt="[Longitude]"  />
			</s:VGroup>	
	</s:Scroller>
	
	<components:TabMenu id="tabMenu" active="true" bottom="0" leftButtonText="SAVE" rightButtonText="CANCEL"
						visible="{!data.softControls}"
						leftClick="saveButton_clickHandler(event)" rightClick="cancelButton_clickHandler(event)" />
	
	<s:navigationContent>
		<s:Button id="backBtn" label="Back" click="navigator.popView()" />
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button id="doneBtn" label="Done" click="saveButton_clickHandler(event)" />
	</s:actionContent>
	
</s:View>
